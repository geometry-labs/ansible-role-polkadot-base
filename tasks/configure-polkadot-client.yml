- name: ensure data directory
  file:
    path: /data
    state: directory
    mode: '0777'
    owner: root
    group: root

- name: polkadot binary checksum
  shell: |
    set -o pipefail
    if [ -f /usr/local/bin/polkadot ] && \
       [ -f  /etc/systemd/system/polkadot.service ] && \
       [ "$(echo -n '{{ polkadot_binary_checksum }}' | cut -f1 -d':')" != "$(cat /usr/local/bin/polkadot | sha256sum | cut -f1 -d' ')" ]; then
      echo yes
    else
      echo no
    fi
  args:
    executable: /bin/bash
  register: should_upgrade
  changed_when: False

- name: download polkadot binary
  get_url:
    url: '{{ polkadot_binary_url | quote }}'
    checksum: '{{ polkadot_binary_checksum | quote }}'
    dest: /usr/local/bin/polkadot-new
    mode: '0700'
    owner: 'polkadot'
    group: 'polkadot'

- name: check if polkadot binary is present
  stat:
    path: /usr/local/bin/polkadot
  register: polkadot_binary_present

- name: move polkadot binary if not present
  shell: |
    cp /usr/local/bin/polkadot-new /usr/local/bin/polkadot
    chown polkadot:polkadot /usr/local/bin/polkadot
  when: not polkadot_binary_present.stat.exists

- name: check if polkadot service is running
  shell: |
    set -o pipefail
    systemctl is-active --quiet {{ chain_stub }}
    if [ "$?" == 0 ]; then
      echo yes
    else
      echo no
    fi
  args:
    executable: /bin/bash
  register: polkadot_service_running
  changed_when: false

- name: create polkadot dummy config
  template:
    src: polkadot.service.j2
    dest: /etc/systemd/system/{{ chain_stub }}.service
    owner: root
    group: root
    mode: 0600
  when: polkadot_service_running.stdout == "no"

- name: start polkadot dummy service
  systemd:
    name: "{{ chain_stub }}.service"
    state: started
  changed_when: false
  when: polkadot_service_running.stdout == "no"

- name: save peerId
  uri:
    url: http://localhost:{{ api_rpc_port }}
    method: "POST"
    body_format: json
    body: |
      { "jsonrpc":"2.0", "method":"system_localPeerId", "params":[], "id":1 }
  register: peerId
  until: peerId.status == 200
  retries: 10
  delay: 5

- name: set peer id as fact
  set_fact:
    p2p_peer_id: "{{ peerId.json.result }}"

- name: stop polkadot dummy service
  systemd:
    name: "{{ chain_stub }}.service"
    state: stopped
  changed_when: false
  when: polkadot_service_running.stdout == "no"

- name: cronjob for restarting polkadot service
  cron:
    name: "restart polkadot"
    minute: "{{ polkadot_restart_minute }}"
    hour: "{{ polkadot_restart_hour }}"
    day: "{{ polkadot_restart_day }}"
    month: "{{ polkadot_restart_month }}"
    weekday: "{{ polkadot_restart_weekday }}"
    job: "/bin/systemctl restart polkadot.service"
  when: "polkadot_restart_enabled|default(false)|bool"